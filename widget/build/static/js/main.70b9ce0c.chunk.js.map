{"version":3,"sources":["app/i18n/locale/en.ts","app/i18n/locale/index.ts","app/i18n/locale/cs.ts","app/i18n/index.ts","app/cache/index.ts","app/pages/Home/HomePage.tsx","app/assets/media/logoJM.jpg","app/components/Header/styles.ts","app/components/Header/Header.tsx","app/components/Alert/index.tsx","app/components/CustomSnackBar/CustomSnackBar.tsx","app/components/TableOfPosts/styles.ts","app/components/TableOfPosts/TableOfPosts.tsx","app/components/CustomCircularProgress/CustomCircularProgress.tsx","app/components/CustomModal/CustomModal.tsx","app/libs/communicationManager.ts","app/pages/AllCustomers/AllCustomersPage.tsx","app/pages/CreateCustomer/styles.ts","app/pages/CreateCustomer/CreateCustomerPage.tsx","app/pages/CustomerDetail/styles.ts","app/pages/CustomerDetail/CustomerDetailPage.tsx","app/pages/404/NotFoundPage.tsx","app/theme/palette.ts","app/theme/global.ts","app/theme/typography.ts","app/theme/index.ts","app/App.tsx","index.tsx"],"names":["locales","en","locale","cs","snackbarMessageVar","makeVar","error","success","messageId","messageText","locationName","email","cache","InMemoryCache","typePolicies","QuerySnackbarMessage","fields","snackbarMessage","read","useStyles","makeStyles","theme","createStyles","page","textAlign","paddingTop","typography","pxToRem","paddingBottom","breakpoints","down","paddingLeft","paddingRight","routes","process","HomePage","classes","Grid","container","className","item","lg","md","sm","xs","data-cy","to","root","flexGrow","position","zIndex","backgroundColor","palette","primary","contrastText","header","borderBottom","borderBottomColor","grey","menuIconWrapper","appLogoWrapper","margin","height","left","transform","menuWrapper","fontSize","color","fontWeight","marginRight","main","mobileMenuDrawerWrapper","mobileMenuWrapper","width","marginTop","Header","t","useFormatMessage","useState","openMobileMenu","setOpenMobileMenu","handleToggleMobileMenu","justify","alignItems","Box","display","onClick","Menu","src","Logo","alt","exact","id","defaultMessage","Drawer","anchor","open","onClose","direction","Alert","children","severity","elevation","variant","CustomSnackBar","props","message","severityIndex","snackVisible","setSnackVisible","severityOptions","setSeverity","handleSnackClose","event","reason","useEffect","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","table","visuallyHidden","border","clip","overflow","padding","top","tableRow","cursor","th","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","EnhancedTableHead","onRequestSort","headCells","TableHead","TableRow","headCell","TableCell","sortDirection","TableSortLabel","active","property","label","TableOfPosts","history","useHistory","React","setOrder","setOrderBy","data","Table","aria-label","row","labelId","TableBody","hover","tabIndex","push","component","scope","name","useStylesForSpinner","animationDuration","bottom","type","circle","strokeLinecap","CustomCircularProgress","CircularProgress","size","thickness","value","paper","background","boxShadow","shadows","spacing","CommunicationManager","url","rootURL","axios","get","response","post","put","delete","addPost","borderRadius","justifyContent","float","AllCustomersPage","setData","fetchCustomers","customers","Error","form","marginBottom","checkIcon","right","fill","spinnerWrapper","spinner","CreateCustomerPage","colorCode","comments","price","state","setState","isLoading","setIsLoading","isNameValid","setIsNameValid","handleMessage","useCallback","mes","savePost","handleInputChange","e","target","noValidate","autoComplete","onSubmit","preventDefault","TextField","inputProps","onChange","helperText","multiline","rows","isValid","validate","heading","fontWeightRegular","h1","accordionDetails","modalButtonCancel","modalButtonDelete","textTransform","dark","dialogRoot","dialogSpinnerWrapper","dialogSpinner","deleteIcon","CustomerDetailPage","useParams","isDeleteLoading","setIsDeleteLoading","openDialog","setOpenDialog","fetchCustomerById","Date","getTime","content","updatePost","handleFormSubmit","handleDelete","handleDeletePost","renderAccordionInput","Accordion","AccordionSummary","expandIcon","aria-controls","Typography","AccordionDetails","Input","Dialog","aria-labelledby","DialogTitle","Button","NotFoundPage","default","text","light","secondary","warning","info","0","100","200","300","400","500","600","700","900","medium","contrastThreshold","tonalOffset","MuiCssBaseline","body","WebkitFontSmoothing","MozOsxFontSmoothing","fontFamily","join","h2","h3","h4","h5","createMuiTheme","overrides","global","extendedTheme","responsiveFontSizes","App","useReactiveVar","messages","defaultLocale","ThemeProvider","CssBaseline","path","client","ApolloClient","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.70b9ce0c.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nexport default {\n  locale: 'en',\n\n  'Header.nav.customers': 'Customers',\n\n  'update.post.success.message': 'Edited successfully',\n  'create.post.success.message': 'Created successfully',\n  'delete.post.success.message': 'Deleted successfully',\n  'global.error.message': 'Server error',\n  'Button.delete': 'Delete',\n  'Button.cancel': 'Cancel',\n  'delete.deleteModalTitle': 'Really delete',\n  'Input.name.error': 'Please fill up the name',\n  'tableOfPosts.header': 'Clients',\n};\n","import en from './en';\nimport cs from './cs';\n\nexport { en, cs };\n\nexport const locales = {\n  en,\n  cs,\n};\n","/* eslint-disable import/no-anonymous-default-export */\nexport default {\n  locale: 'cs',\n\n  'Header.nav.customers': 'Klienti',\n\n  'update.post.success.message': 'Úspěšně upraveno',\n  'create.post.success.message': 'Úspěšně vytvořeno',\n  'delete.post.success.message': 'Úspěšně smazáno',\n  'global.error.message': 'Problém na serveru',\n  'Button.delete': 'Odstranit',\n  'Button.cancel': 'Zpět',\n  'delete.deleteModalTitle': 'Opravdu smazat',\n  'Input.name.error': 'Prosím vyplňte jméno',\n  'tableOfPosts.header': 'Klienti',\n};\n","export * from './types';\nexport * from './locale';\n","import { InMemoryCache, makeVar } from '@apollo/client';\n\nexport const snackbarMessageVar = makeVar({\n  error: false,\n  success: false,\n  messageId: '',\n  messageText: '',\n  locationName: 'default',\n  email: '',\n});\n\nexport const cache = new InMemoryCache({\n  typePolicies: {\n    QuerySnackbarMessage: {\n      fields: {\n        snackbarMessage: {\n          read() {\n            return snackbarMessageVar();\n          },\n        },\n      },\n    },\n  },\n});\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles, Theme, createStyles, Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    page: {\n      textAlign: 'center',\n      paddingTop: theme.typography.pxToRem(50),\n      paddingBottom: theme.typography.pxToRem(50),\n      [theme.breakpoints.down('md')]: {\n        paddingLeft: theme.typography.pxToRem(15),\n        paddingRight: theme.typography.pxToRem(15),\n      },\n    },\n  }),\n);\n\nconst routes = {\n  AllCustomersPage: process.env.REACT_APP_ROUTE_ALL_CUSTOMERS,\n};\n\nconst HomePage: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.page}>\n      <Grid item lg={2} />\n      <Grid item lg={8} md sm xs>\n        <Link data-cy=\"homepage-link-to-customers\" to={`${routes.AllCustomersPage}`}>\n          Vstoupit\n        </Link>\n      </Grid>\n      <Grid item lg={2} />\n    </Grid>\n  );\n};\n\nexport default HomePage;\n","export default __webpack_public_path__ + \"static/media/logoJM.10087591.jpg\";","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      position: 'relative',\n      zIndex: 999,\n      backgroundColor: theme.palette.primary.contrastText,\n    },\n    header: {\n      borderBottom: '1px solid',\n      borderBottomColor: theme.palette.grey[100],\n      paddingTop: theme.typography.pxToRem(10),\n      paddingBottom: theme.typography.pxToRem(10),\n    },\n    menuIconWrapper: {\n      paddingTop: theme.typography.pxToRem(4),\n      [theme.breakpoints.down('md')]: {\n        paddingLeft: theme.typography.pxToRem(15),\n      },\n    },\n    appLogoWrapper: {\n      paddingTop: theme.typography.pxToRem(4),\n      paddingLeft: theme.typography.pxToRem(15),\n      margin: 'auto 0',\n      '& img': {\n        height: theme.typography.pxToRem(60),\n        paddingTop: theme.typography.pxToRem(8),\n        paddingBottom: theme.typography.pxToRem(4),\n      },\n      [theme.breakpoints.down('sm')]: {\n        paddingTop: 0,\n        position: 'absolute',\n        left: '50%',\n        transform: 'translateX(-50%)',\n      },\n    },\n    menuWrapper: {\n      paddingTop: theme.typography.pxToRem(2),\n      paddingLeft: theme.typography.pxToRem(25),\n      '& a': {\n        fontSize: theme.typography.pxToRem(16),\n        color: theme.palette.grey[500],\n        fontWeight: 500,\n        marginRight: theme.typography.pxToRem(15),\n      },\n      '& .active': {\n        color: theme.palette.primary.main,\n      },\n    },\n    mobileMenuDrawerWrapper: {\n      '& .MuiDrawer-paper': {\n        backgroundColor: theme.palette.primary.main,\n      },\n    },\n    mobileMenuWrapper: {\n      width: theme.typography.pxToRem(280),\n      paddingTop: theme.typography.pxToRem(15),\n      paddingLeft: theme.typography.pxToRem(45),\n      backgroundColor: theme.palette.primary.main,\n      '& a': {\n        fontSize: theme.typography.pxToRem(16),\n        color: theme.palette.grey['900'],\n        // color: theme.palette.primary.contrastText,\n        marginRight: theme.typography.pxToRem(25),\n        fontWeight: 700,\n        marginTop: theme.typography.pxToRem(24),\n      },\n      '& .active': {\n        color: theme.palette.grey['900'],\n        // color: theme.palette.primary.contrastText,\n      },\n    },\n  }),\n);\n\nexport default useStyles;\n","import React, { useState } from 'react';\nimport { Box, Drawer, Grid } from '@material-ui/core';\nimport { Menu } from '@material-ui/icons';\nimport { useFormatMessage } from 'react-intl-hooks';\nimport { Link, NavLink } from 'react-router-dom';\nimport Logo from '../../assets/media/logoJM.jpg';\nimport useStyles from './styles';\n\nconst routes = {\n  AllCustomersPage: process.env.REACT_APP_ROUTE_ALL_CUSTOMERS,\n};\n\nconst Header: React.FC = () => {\n  const classes = useStyles();\n  const t = useFormatMessage();\n\n  const [openMobileMenu, setOpenMobileMenu] = useState(false);\n\n  const handleToggleMobileMenu = () => {\n    setOpenMobileMenu(!openMobileMenu);\n  };\n\n  const renderNavigation = () => {\n    return (\n      <Box className={classes.menuWrapper} display={{ xs: 'none', md: 'block' }}>\n        <NavLink to={`${routes.AllCustomersPage}`} exact>\n          {t({ id: 'Header.nav.customers', defaultMessage: 'Klienti' })}\n        </NavLink>\n      </Box>\n    );\n  };\n\n  const renderMobileNavigation = () => {\n    return (\n      <Grid container justify=\"flex-start\" direction=\"column\" className={classes.mobileMenuWrapper}>\n        <NavLink to={`${routes.AllCustomersPage}`} exact onClick={handleToggleMobileMenu}>\n          {t({ id: 'Header.nav.customers', defaultMessage: 'Klienti' })}\n        </NavLink>\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <Grid\n        data-cy=\"header\"\n        container\n        justify=\"space-between\"\n        alignItems=\"center\"\n        className={classes.root}\n      >\n        <Grid item lg={2} />\n        <Grid item xs sm md lg className={classes.header}>\n          <Grid container justify=\"space-between\" alignItems=\"center\">\n            <Grid item md={2}>\n              <Grid container justify=\"flex-start\" alignItems=\"center\">\n                <Box\n                  display={{ xs: 'block', md: 'none' }}\n                  className={classes.menuIconWrapper}\n                  onClick={handleToggleMobileMenu}\n                >\n                  <Menu />\n                </Box>\n                <Box className={classes.appLogoWrapper}>\n                  <Link to={`${routes.AllCustomersPage}`}>\n                    <img src={Logo} alt=\"logo\" />\n                  </Link>\n                </Box>\n              </Grid>\n            </Grid>\n            {renderNavigation()}\n          </Grid>\n        </Grid>\n        <Grid item lg={2} />\n      </Grid>\n      <Drawer\n        className={classes.mobileMenuDrawerWrapper}\n        anchor=\"left\"\n        open={openMobileMenu}\n        onClose={handleToggleMobileMenu}\n      >\n        {renderMobileNavigation()}\n      </Drawer>\n    </>\n  );\n};\n\nexport default Header;\n","/**\n * Alert box with icon, text and close button\n * Use itside of <Snackbar> component\n *\n * severity can have following values:\n *  - info\n *  - success\n *  - warning\n *  - error\n */\n\nimport React from 'react';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\n\nconst Alert: React.FC<AlertProps> = ({ children, severity, onClose }: AlertProps) => (\n  <MuiAlert elevation={6} variant=\"filled\" severity={severity} onClose={onClose}>\n    {children}\n  </MuiAlert>\n);\n\nexport default Alert;\n","/* eslint-disable react/require-default-props */\nimport React, { useEffect, useState } from 'react';\nimport { Snackbar } from '@material-ui/core';\nimport { useFormatMessage } from 'react-intl-hooks';\nimport { Color } from '@material-ui/lab';\nimport { IMessage } from '../../core';\nimport Alert from '../Alert';\n\ninterface IProps {\n  message: IMessage;\n  severityIndex: number;\n  locationName?: string;\n}\n\n/**\n * Custom universal Snackbar\n * @param message IMessage object\n * @param severityIndex number, [\"error\", \"success\", \"warning\", \"info\"]\n * @param locationName string, Name of location where Snackar is imported,\n * for custom data-cy prop, default is \"general\"\n */\nconst CustomSnackBar: React.FC<IProps> = (props: IProps) => {\n  const t = useFormatMessage();\n  const { message, severityIndex, locationName = 'general' } = props;\n  const [snackVisible, setSnackVisible] = useState<boolean>(true);\n  const [severityOptions] = useState<Color[]>(['error', 'success', 'warning', 'info']);\n  const [severity, setSeverity] = useState<Color>('error');\n  const { email } = message;\n\n  const handleSnackClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackVisible(false);\n  };\n\n  useEffect(() => {\n    setSeverity(severityOptions[severityIndex]);\n    setSnackVisible(true);\n  }, [severityIndex, severityOptions, message]);\n\n  return (\n    <div>\n      <Snackbar\n        data-cy={`${locationName}-snackbar-${severity}`}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n        open={snackVisible}\n        autoHideDuration={8000}\n        onClose={handleSnackClose}\n      >\n        <Alert\n          data-cy={`${locationName}-snackbar-alert`}\n          onClose={handleSnackClose}\n          severity={severity}\n        >\n          {message.messageId &&\n            t({ id: message.messageId, defaultMessage: 'Unknown error' }, { email })}\n          {message.messageText && message.messageText}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default CustomSnackBar;\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    table: {\n      // marginTop: theme.typography.pxToRem(40),\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1,\n    },\n    tableRow: {\n      cursor: 'pointer',\n    },\n    th: {\n      paddingTop: theme.typography.pxToRem(18),\n    },\n  }),\n);\n\nexport default useStyles;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { TableSortLabel } from '@material-ui/core';\nimport { useFormatMessage } from 'react-intl-hooks';\n\nimport useStyles from './styles';\n\nconst routes = {\n  AllCustomersPage: process.env.REACT_APP_ROUTE_ALL_CUSTOMERS,\n};\n\ninterface IData {\n  name: string;\n}\n\ninterface IHeadCell {\n  id: keyof IData;\n  label: React.ReactNode;\n}\n\ninterface IEnhancedTableProps {\n  classes: ReturnType<typeof useStyles>;\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof IData) => void;\n  order: Order;\n  orderBy: string;\n  headCells: IHeadCell[];\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array: any, comparator: any) {\n  const stabilizedThis = array.map((el: any, index: number) => [el, index]);\n\n  stabilizedThis.sort((a: any, b: any) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el: any) => el[0]);\n}\n\nfunction EnhancedTableHead(props: IEnhancedTableProps) {\n  const { classes, order, orderBy, onRequestSort, headCells } = props;\n  const createSortHandler = (property: keyof IData) => (event: React.MouseEvent<unknown>) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell: IHeadCell) => (\n          <TableCell key={headCell.id} sortDirection={orderBy === headCell.id ? order : false}>\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\ninterface IPost {\n  id: number;\n  name: string;\n  color: string;\n  colorCode: string;\n  price: string;\n  comments: string;\n}\n\ninterface IProps {\n  data?: IPost[];\n}\n\nconst TableOfPosts = (props: IProps) => {\n  const classes = useStyles();\n  const t = useFormatMessage();\n  const history = useHistory();\n\n  const [order, setOrder] = React.useState<Order>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof IData>('name');\n\n  const { data } = props;\n\n  const headCells: IHeadCell[] = [\n    {\n      id: 'name',\n      label: t({ id: 'tableOfPosts.header', defaultMessage: 'Klienti' }),\n    },\n  ];\n\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof IData) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handlePostRowClick = (id: number) => {\n    return history.push(`${routes.AllCustomersPage}/${id}`);\n  };\n\n  return (\n    <Table data-cy=\"TableOfPosts\" className={classes.table} aria-label=\"table\">\n      <EnhancedTableHead\n        classes={classes}\n        order={order}\n        orderBy={orderBy}\n        onRequestSort={handleRequestSort}\n        headCells={headCells}\n      />\n      {data &&\n        stableSort(data, getComparator(order, orderBy)).map((row: IPost, index: number) => {\n          // const { date } = row;\n          // const dateObject = new Date(date ? date : '');\n          // const day = dateObject.getDay();\n          // const month = dateObject.getMonth() + 1;\n          // const year = dateObject.getFullYear();\n\n          const labelId = `enhanced-table-checkbox-${index}`;\n\n          return (\n            <TableBody key={row.id}>\n              <TableRow\n                data-cy=\"TableRow\"\n                className={classes.tableRow}\n                hover\n                tabIndex={-1}\n                onClick={() => handlePostRowClick(row.id)}\n              >\n                <TableCell\n                  data-cy=\"TableCell\"\n                  component=\"th\"\n                  id={labelId}\n                  scope=\"row\"\n                  className={classes.th}\n                >\n                  {row.name}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          );\n        })}\n    </Table>\n  );\n};\n\nexport default TableOfPosts;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStylesForSpinner = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n    width: 30,\n  },\n  top: {\n    color: 'primary',\n    animationDuration: '900ms',\n    position: 'absolute',\n    left: 0,\n  },\n  bottom: {\n    color: theme.palette.grey[theme.palette.type === 'light' ? 400 : 700],\n    position: 'absolute',\n    left: 0,\n  },\n  circle: {\n    strokeLinecap: 'round',\n  },\n}));\n\nconst CustomCircularProgress: React.FC = () => {\n  const classes = useStylesForSpinner();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress\n        variant=\"determinate\"\n        className={classes.bottom}\n        size={30}\n        thickness={4}\n        value={100}\n      />\n      <CircularProgress\n        className={classes.top}\n        classes={{\n          circle: classes.circle,\n        }}\n        size={30}\n        thickness={4}\n      />\n    </div>\n  );\n};\n\nexport default CustomCircularProgress;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      position: 'absolute',\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }),\n);\n\nexport default function CustomModal() {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Text in a modal</h2>\n      <p id=\"simple-modal-description\">\n        Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n      </p>\n      <CustomModal />\n    </div>\n  );\n\n  return (\n    <div>\n      <button type=\"button\" onClick={handleOpen}>\n        Open Modal\n      </button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nexport default class CommunicationManager {\n  static async get(url: string) {\n    const rootURL = process.env.REACT_APP_ROOT_URL + url;\n\n    const response = await axios.get<any>(rootURL);\n\n    if (!response.data) {\n      return [];\n    }\n\n    return response.data;\n  }\n\n  static async post(url: string, data: any) {\n    const rootURL = process.env.REACT_APP_ROOT_URL + url;\n\n    const response = await axios.post<any>(rootURL, data);\n\n    if (!response.data) {\n      return [];\n    }\n\n    return response.data;\n  }\n  \n  static async put(url: string, data: any) {\n    const rootURL = process.env.REACT_APP_ROOT_URL + url;\n\n    const response = await axios.put<any>(rootURL, data);\n\n    if (!response.data) {\n      return [];\n    }\n\n    return response.data;\n  }\n\n  static async delete(url: string, data: any) {\n    const rootURL = process.env.REACT_APP_ROOT_URL + url;\n\n    const response = await axios.delete<any>(rootURL, data);\n\n    if (!response.data) {\n      return [];\n    }\n\n    return response.data;\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles, Theme, createStyles, Grid, Box } from '@material-ui/core';\nimport { TableOfPosts } from '../../components';\nimport CommunicationManager from '../../libs/communicationManager';\nimport { Link } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst routes = {\n  CreateCustomerPage: process.env.REACT_APP_ROUTE_CREATE_CUSTOMER,\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    page: {\n      paddingTop: theme.typography.pxToRem(50),\n      paddingBottom: theme.typography.pxToRem(50),\n      [theme.breakpoints.down('md')]: {\n        paddingLeft: theme.typography.pxToRem(15),\n        paddingRight: theme.typography.pxToRem(15),\n      },\n    },\n    addPost: {\n      '& a': {\n        borderRadius: '50%',\n        border: `1px solid ${theme.palette.success.main}`,\n        width: theme.typography.pxToRem(48),\n        height: theme.typography.pxToRem(48),\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        float: 'right',\n        color: theme.palette.success.main,\n      },\n    },\n  }),\n);\n\nconst AllCustomersPage: React.FC = () => {\n  const classes = useStyles();\n\n  const [data, setData] = useState<any[]>([]);\n\n  const fetchCustomers = async () => {\n    try {\n      const response = await CommunicationManager.get('/customers');\n      setData(response.customers);\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n\n  return (\n    <Grid container className={classes.page}>\n      <Grid item lg={2} />\n      <Grid item lg={8} md sm xs>\n        <Box data-cy=\"addPostIcon\" className={classes.addPost}>\n          <Link to={`${routes.CreateCustomerPage}`}>\n            <AddIcon />\n          </Link>\n        </Box>\n        <TableOfPosts data={data} />\n      </Grid>\n      <Grid item lg={2} />\n    </Grid>\n  );\n};\n\nexport default AllCustomersPage;\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    page: {\n      paddingTop: theme.typography.pxToRem(50),\n      paddingBottom: theme.typography.pxToRem(50),\n      [theme.breakpoints.down('md')]: {\n        paddingLeft: theme.typography.pxToRem(15),\n        paddingRight: theme.typography.pxToRem(15),\n      },\n    },\n    form: {\n      width: '100%',\n      '& .MuiInputBase-root': {\n        width: '100%',\n      },\n      '& .MuiInputLabel-root.Mui-focused': {\n        color: theme.palette.success.main\n      },\n      '& .MuiTextField-root': {\n        width: '100%',\n        marginBottom: theme.typography.pxToRem(30),\n      },\n      '& .MuiInput-underline:after': {\n        borderBottom: `2px solid ${theme.palette.success.main}`,\n      },\n    },\n    checkIcon: {\n      position: 'absolute',\n      right: 0,\n      cursor: 'pointer',\n      width: theme.typography.pxToRem(32),\n      height: theme.typography.pxToRem(32),\n      fill: theme.palette.success.main,\n    },\n    spinnerWrapper: {\n      position: 'relative',\n      width: theme.typography.pxToRem(32),\n      height: theme.typography.pxToRem(32),\n      margin: `${theme.typography.pxToRem(50)} auto`,\n    },\n    spinner: {\n      position: 'absolute',\n    },\n  }),\n);\n\nexport default useStyles;\n","import React, { FormEvent, useCallback, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport useStyles from './styles';\nimport { useFormatMessage } from 'react-intl-hooks';\nimport { Box, Grid, TextField } from '@material-ui/core';\nimport CommunicationManager from '../../libs/communicationManager';\nimport { snackbarMessageVar } from '../../cache';\nimport { IMessage } from '../../core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport { CustomCircularProgress } from '../../components';\n\nconst routes = {\n  AllCustomersPage: process.env.REACT_APP_ROUTE_ALL_CUSTOMERS,\n};\n\nconst CreateCustomerPage: React.FC = () => {\n  const classes = useStyles();\n  const t = useFormatMessage();\n  const history = useHistory();\n\n  const [state, setState] = useState({\n    color: '',\n    colorCode: '',\n    comments: '',\n    name: '',\n    price: '',\n  });\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isNameValid, setIsNameValid] = useState<boolean>(true);\n\n  const handleMessage = useCallback((mes: IMessage) => {\n    snackbarMessageVar({ ...snackbarMessageVar(), ...mes });\n  }, []);\n\n  const savePost = async () => {\n    const data = {\n      color: state.color,\n      colorCode: state.colorCode,\n      comments: state.comments,\n      name: state.name,\n      price: state.price,\n    };\n    try {\n      const response = await CommunicationManager.post('/customers', data);\n      if (response) {\n        handleMessage({\n          error: false,\n          success: true,\n          messageId: 'create.post.success.message',\n          locationName: 'create-post-success',\n        });\n\n        setIsLoading(false);\n\n        history.push(`${routes.AllCustomersPage}`);\n      }\n    } catch (error) {\n      handleMessage({\n        error: true,\n        success: false,\n        messageId: 'global.error.message',\n        locationName: 'create-post-error',\n      });\n\n      throw new Error(error);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.name === 'name') {\n      setIsNameValid(true);\n    }\n\n    const value = e.target.value;\n\n    setState({\n      ...state,\n      [e.target.name]: value,\n    });\n  };\n\n  const validate = () => {\n    let isValid = true;\n\n    if (!state.name) {\n      setIsNameValid(false);\n      isValid = false;\n    }\n\n    return isValid;\n  };\n\n  const handleFormSubmit = (e: FormEvent) => {\n    e.preventDefault();\n  };\n\n  const handleSave = () => {\n    if (validate()) {\n      setIsLoading(true);\n      savePost();\n    }\n  };\n\n  return (\n    <Grid container className={classes.page}>\n      <Grid item lg={2} />\n      <Grid item lg={8} md sm xs>\n        <form noValidate autoComplete=\"off\" onSubmit={handleFormSubmit} className={classes.form}>\n          <TextField\n            name=\"name\"\n            label={t({ id: 'Input.name', defaultMessage: 'Jméno' })}\n            value={state.name}\n            inputProps={{ 'aria-label': 'name' }}\n            onChange={handleInputChange}\n            error={!isNameValid}\n            helperText={\n              !isNameValid &&\n              t({\n                id: 'Input.name.error',\n                defaultMessage: 'Prosím vyplňte jméno',\n              })\n            }\n          />\n          <TextField\n            name=\"color\"\n            label={t({ id: 'Input.color', defaultMessage: 'Barva' })}\n            value={state.color}\n            inputProps={{ 'aria-label': 'color' }}\n            onChange={handleInputChange}\n          />\n          <TextField\n            name=\"colorCode\"\n            label={t({ id: 'Input.colorCode', defaultMessage: 'Kód barvy' })}\n            value={state.colorCode}\n            inputProps={{ 'aria-label': 'colorCode' }}\n            onChange={handleInputChange}\n          />\n          <TextField\n            name=\"price\"\n            label={t({ id: 'Input.price', defaultMessage: 'Cena' })}\n            value={state.price}\n            inputProps={{ 'aria-label': 'price' }}\n            onChange={handleInputChange}\n          />\n          <TextField\n            multiline\n            name=\"comments\"\n            label={t({ id: 'Input.comments', defaultMessage: 'Poznámky' })}\n            value={state.comments}\n            rows={8}\n            inputProps={{ 'aria-label': 'comments' }}\n            onChange={handleInputChange}\n          />\n        </form>\n        <Box className={classes.spinnerWrapper}>\n          {isLoading && (\n            <Box className={classes.spinner}>\n              <CustomCircularProgress />\n            </Box>\n          )}\n          {!isLoading && <CheckIcon className={classes.checkIcon} onClick={handleSave} />}\n        </Box>\n      </Grid>\n      <Grid item lg={2} />\n    </Grid>\n  );\n};\n\nexport default CreateCustomerPage;\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    page: {\n      paddingTop: theme.typography.pxToRem(50),\n      paddingBottom: theme.typography.pxToRem(50),\n      [theme.breakpoints.down('md')]: {\n        paddingLeft: theme.typography.pxToRem(15),\n        paddingRight: theme.typography.pxToRem(15),\n      },\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(12),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n    h1: {\n      marginBottom: theme.typography.pxToRem(50),\n      textAlign: 'center',\n    },\n    accordionDetails: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    },\n    form: {\n      width: '90%',\n      '& .MuiInputBase-root': {\n        width: '100%',\n      },\n      '& .MuiInput-underline:before': {\n        display: 'none',\n      },\n      '& .MuiTextField-root': {\n        width: '100%',\n      },\n      '& .MuiInput-underline:after': {\n        borderBottom: `1px solid ${theme.palette.success.main}`,\n      },\n    },\n    checkIcon: {\n      position: 'absolute',\n      right: 0,\n      cursor: 'pointer',\n      width: theme.typography.pxToRem(32),\n      height: theme.typography.pxToRem(32),\n      fill: theme.palette.success.main,\n    },\n    spinnerWrapper: {\n      position: 'relative',\n      width: theme.typography.pxToRem(32),\n      height: theme.typography.pxToRem(32),\n    },\n    spinner: {\n      position: 'absolute',\n    },\n    modalButtonCancel: {\n      marginRight: theme.typography.pxToRem(30),\n    },\n    modalButtonDelete: {\n      position: 'absolute',\n      textTransform: 'none',\n      backgroundColor: theme.palette.error.main,\n      color: theme.palette.error.contrastText,\n      '&.MuiButton-contained:hover': {\n        backgroundColor: `${theme.palette.error.dark} !important`,\n      },\n    },\n    dialogRoot: {\n      '& .MuiDialog-paperWidthSm': {\n        padding: theme.typography.pxToRem(30),\n      },\n      '& .MuiDialogTitle-root': {\n        marginBottom: theme.typography.pxToRem(30),\n      },\n    },\n    dialogSpinnerWrapper: {\n      position: 'relative',\n      width: theme.typography.pxToRem(110),\n    },\n    dialogSpinner: {\n      position: 'absolute',\n      top: theme.typography.pxToRem(6),\n      left: '50%',\n      transform: 'translateX(-50%)',\n      width: theme.typography.pxToRem(32),\n      height: theme.typography.pxToRem(32),\n    },\n    deleteIcon: {\n      cursor: 'pointer',\n      textAlign: 'center',\n      marginTop: theme.typography.pxToRem(80),\n      marginBottom: theme.typography.pxToRem(80),\n      '& svg': {\n        fontSize: theme.typography.pxToRem(32),\n        fill: theme.palette.error.main,\n      },\n    },\n  }),\n);\n\nexport default useStyles;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { FormEvent, useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CommunicationManager from '../../libs/communicationManager';\nimport { Box, Grid, Input, TextField, Dialog, Button, DialogTitle } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport { CustomCircularProgress } from '../../components';\nimport useStyles from './styles';\nimport { snackbarMessageVar } from '../../cache';\nimport { IMessage } from '../../core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport { useFormatMessage } from 'react-intl-hooks';\nimport { useHistory } from 'react-router-dom';\n\nconst routes = {\n  AllCustomersPage: process.env.REACT_APP_ROUTE_ALL_CUSTOMERS,\n};\n\nconst CustomerDetailPage: React.FC = () => {\n  const classes = useStyles();\n  const t = useFormatMessage();\n  const { id } = useParams<{ id: string }>();\n  const history = useHistory();\n\n  const [state, setState] = useState({\n    color: '',\n    colorCode: '',\n    comments: '',\n    name: '',\n    price: '',\n  });\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isDeleteLoading, setIsDeleteLoading] = useState<boolean>(false);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const handleMessage = useCallback((mes: IMessage) => {\n    snackbarMessageVar({ ...snackbarMessageVar(), ...mes });\n  }, []);\n\n  const fetchCustomerById = useCallback(async () => {\n    try {\n      const response = await CommunicationManager.get(\n        `/customers?id=${id}&timestamp=${new Date().getTime()}`,\n      );\n\n      if (response) {\n        setIsLoading(false);\n        setState({\n          ...state,\n          color: response.color,\n          colorCode: response.colorCode,\n          comments: response.comments,\n          name: response.name,\n          price: response.price,\n        });\n      }\n    } catch (error) {\n      throw new Error(error);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchCustomerById();\n  }, [fetchCustomerById]);\n\n  const updatePost = async () => {\n    const data = {\n      id,\n      color: state.color,\n      colorCode: state.colorCode,\n      comments: state.comments,\n      name: state.name,\n      price: state.price,\n    };\n    try {\n      const response = await CommunicationManager.put('/customers', data);\n      if (response) {\n        handleMessage({\n          error: false,\n          success: true,\n          messageId: 'update.post.success.message',\n          locationName: 'update-post-success',\n        });\n\n        setIsLoading(false);\n      }\n    } catch (error) {\n      handleMessage({\n        error: true,\n        success: false,\n        messageId: 'global.error.message',\n        locationName: 'update-post-error',\n      });\n\n      throw new Error(error);\n    }\n  };\n\n  const handleFormSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    updatePost();\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setState({\n      ...state,\n      [e.target.name]: value,\n    });\n  };\n\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  const handleDelete = async () => {\n    setOpenDialog(true);\n  };\n\n  const handleCancelButtonClick = () => {\n    setOpenDialog(false);\n  };\n\n  const handleDeletePost = async () => {\n    setIsDeleteLoading(true);\n\n    const data = {\n      data: { id },\n    };\n    try {\n      const response = await CommunicationManager.delete('/customers', data);\n      if (response) {\n        handleMessage({\n          error: false,\n          success: true,\n          messageId: 'delete.post.success.message',\n          locationName: 'delete-post-success',\n        });\n\n        setIsDeleteLoading(false);\n\n        history.push(`${routes.AllCustomersPage}`);\n      }\n    } catch (error) {\n      handleMessage({\n        error: true,\n        success: false,\n        messageId: 'global.error.message',\n        locationName: 'delete-post-error',\n      });\n\n      throw new Error(error);\n    }\n  };\n\n  const renderAccordionInput = (heading: string, content: string, name: string) => {\n    return (\n      <Accordion>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={`${heading}-content`}>\n          <Typography className={classes.heading}>{heading}</Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.accordionDetails}>\n          <form noValidate autoComplete=\"off\" onSubmit={handleFormSubmit} className={classes.form}>\n            <Input\n              name={name}\n              value={content}\n              inputProps={{ 'aria-label': heading }}\n              onChange={handleInputChange}\n            />\n          </form>\n\n          <Box className={classes.spinnerWrapper}>\n            {isLoading && (\n              <Box className={classes.spinner}>\n                <CustomCircularProgress />\n              </Box>\n            )}\n            {!isLoading && <CheckIcon className={classes.checkIcon} onClick={handleFormSubmit} />}\n          </Box>\n        </AccordionDetails>\n      </Accordion>\n    );\n  };\n\n  const renderAccordionTextField = (heading: string, content: string, name: string) => {\n    return (\n      <Accordion>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={`${heading}-content`}>\n          <Typography className={classes.heading}>{heading}</Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.accordionDetails}>\n          <form noValidate autoComplete=\"off\" className={classes.form}>\n            <TextField\n              multiline\n              name={name}\n              value={content}\n              rows={8}\n              inputProps={{ 'aria-label': heading }}\n              onChange={handleInputChange}\n            />\n          </form>\n          <CheckIcon className={classes.checkIcon} onClick={handleFormSubmit} />\n        </AccordionDetails>\n      </Accordion>\n    );\n  };\n\n  return (\n    <>\n      <Grid container className={classes.page}>\n        <Grid item lg={2} />\n        <Grid item lg={8} md sm xs>\n          <Typography variant=\"h1\" className={classes.h1}>\n            {state.name}\n          </Typography>\n          {renderAccordionInput('Jméno :', state.name, 'name')}\n          {renderAccordionInput('Úkon :', state.color, 'color')}\n          {renderAccordionInput('Kód barvy :', state.colorCode, 'colorCode')}\n          {renderAccordionInput('Cena :', state.price, 'price')}\n          {renderAccordionTextField('Poznámky :', state.comments, 'comments')}\n          <Box onClick={handleDelete} className={classes.deleteIcon}>\n            <DeleteForeverIcon />\n          </Box>\n        </Grid>\n        <Grid item lg={2} />\n      </Grid>\n\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"simple-dialog-title\"\n        open={openDialog}\n        className={classes.dialogRoot}\n      >\n        <DialogTitle id=\"simple-dialog-title\">\n          {t({ id: 'delete.deleteModalTitle', defaultMessage: 'Opravdu smazat' })} {state.name} ?\n        </DialogTitle>\n        <Box display=\"flex\" justifyContent=\"flex-end\">\n          <Button className={classes.modalButtonCancel} onClick={handleCancelButtonClick}>\n            {t({ id: 'Button.cancel', defaultMessage: 'Zpět' })}\n          </Button>\n          <Box className={classes.dialogSpinnerWrapper}>\n            {!isDeleteLoading && (\n              <Button\n                data-cy=\"editor-editPost-modal-button-delete\"\n                className={classes.modalButtonDelete}\n                onClick={handleDeletePost}\n                variant=\"contained\"\n                type=\"submit\"\n                size=\"large\"\n              >\n                {t({ id: 'Button.delete', defaultMessage: 'Odstranit' })}\n              </Button>\n            )}\n            {isDeleteLoading && (\n              <Box className={classes.dialogSpinner}>\n                <CustomCircularProgress />\n              </Box>\n            )}\n          </Box>\n        </Box>\n      </Dialog>\n    </>\n  );\n};\n\nexport default CustomerDetailPage;\n","import React from 'react';\n\nconst NotFoundPage: React.FC = () => {\n  return <div>NotFoundPage</div>;\n};\n\nexport default NotFoundPage;\n","/* eslint-disable import/no-anonymous-default-export */\n\n/**\n * Color palette\n */\n\n// Extend type definitions with custom color names\ndeclare module '@material-ui/core/styles/createPalette' {\n  interface IPalette {\n    dark: Palette['primary'];\n    medium: Palette['primary'];\n    light: Palette['primary'];\n  }\n  interface IPaletteOptions {\n    dark: PaletteOptions['primary'];\n    medium: PaletteOptions['primary'];\n    light: PaletteOptions['primary'];\n  }\n}\n\nexport default {\n  /**\n   * MUI standard colors\n   */\n  background: {\n    default: '#fff',\n    paper: '#fff',\n  },\n  text: {\n    primary: '#414042',\n  },\n  primary: {\n    main: '#DC0032',\n    light: '#FF0640',\n    dark: '#BC002C',\n    contrastText: '#fff',\n  },\n  secondary: {\n    main: '#808285',\n    light: '#929396',\n    dark: '#6D6F72',\n    contrastText: '#fff',\n  },\n  // Danger color in XD\n  error: {\n    main: '#DC0032',\n    light: '#FF0640',\n    dark: '#BC002C',\n    contrastText: '#fff',\n  },\n  // Alert color in XD\n  warning: {\n    main: '#f6b436',\n    light: '#f7bc4a',\n    dark: '#d89e30',\n    contrastText: '#262829',\n  },\n  // Tertiary color in XD\n  info: {\n    main: '#98d2dd',\n    light: '#a2d7e0',\n    dark: '#86b9c2',\n    contrastText: '#262829',\n  },\n  success: {\n    main: '#00a300',\n    light: '#1aac1a',\n    dark: '#008f00',\n    contrastText: '#fff',\n  },\n  // It must be grey not gray!\n  // Usege example: theme.palette.grey['700']\n  grey: {\n    0: '#fff',\n    100: '#E6E7E8',\n    200: '#e2e3e4',\n    300: '#c9cacc',\n    400: '#b8babc',\n    500: '#97999c',\n    600: '#797a7c',\n    700: '#54585a',\n    900: '#000000',\n  },\n  /**\n   * Custom colors\n   *\n   * Following colors can be used only directly by using\n   * either // useTheme() or makeStyles()\n   * /!\\  USE THESE ONLY WHEN NECESSARY  /!\\\n   */\n  dark: {\n    main: '#54585a',\n    light: '#65696b',\n    dark: '#4a4d4f',\n    contrastText: '#fff',\n  },\n  medium: {\n    main: '#97999c',\n    light: '#a1a3a6',\n    dark: '#cfcfd0',\n    contrastText: '#fff',\n  },\n  light: {\n    main: '#E6E7E8',\n    light: '#ededee',\n    dark: '#cfcfd0',\n    contrastText: '#262829',\n  },\n  contrastThreshold: 3,\n  tonalOffset: 0.2,\n};\n","/* eslint-disable import/no-anonymous-default-export */\n\n/**\n * Global CSS overrides\n *\n * Use these to globaly add styles to html, body, etc.\n */\n\nimport palette from './palette';\n\nexport default {\n  MuiCssBaseline: {\n    '@global': {\n      body: {\n        WebkitFontSmoothing: 'antialiased',\n        MozOsxFontSmoothing: 'grayscale',\n        backgroundColor: palette.background.default,\n        color: palette.text.primary,\n      },\n    },\n  },\n};\n","/* eslint-disable import/no-anonymous-default-export */\n\n/**\n * Typographic settings\n */\n\nexport default {\n  fontFamily: [\n    // prefered font family\n    'Noto Sans',\n    // prefered fallback font family\n    'Helvetica Neue',\n    '\"Open Sans\"',\n    'Roboto',\n    '-apple-system',\n    'BlinkMacSystemFont',\n    '\"Segoe UI\"',\n    'Oxygen',\n    'Ubuntu',\n    'Cantarell',\n    '\"Fira Sans\"',\n    '\"Droid Sans\"',\n    'sans-serif',\n  ].join(','),\n  h1: {\n    fontSize: '2.5rem',\n  },\n  h2: {\n    fontSize: '2rem',\n  },\n  h3: {\n    fontSize: '1.5rem',\n  },\n  h4: {\n    fontSize: '1.125rem',\n  },\n  h5: {\n    fontSize: '0.75rem',\n  },\n};\n","/**\n * MUI custom light theme\n *\n * See https://material-ui.com/\n */\n\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core';\n\nimport global from './global';\nimport palette from './palette';\nimport typography from './typography';\n\n// Create custom theme\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides: {\n    ...global,\n  },\n});\n\n// Generate responsive typography based on visual breakpoints\nconst extendedTheme = responsiveFontSizes(theme, {});\n\nexport default extendedTheme;\n","import React from 'react';\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport { IntlProvider } from 'react-intl-hooks';\nimport { BrowserRouter, Switch, Route, HashRouter } from 'react-router-dom';\nimport { useReactiveVar } from '@apollo/client';\nimport HomePage from './pages/Home/HomePage';\nimport AllCustomersPage from './pages/AllCustomers/AllCustomersPage';\nimport CreateCustomerPage from './pages/CreateCustomer/CreateCustomerPage';\nimport CustomerDetailPage from './pages/CustomerDetail/CustomerDetailPage';\nimport NotFoundPage from './pages/404/NotFoundPage';\nimport { Header, CustomSnackBar } from './components';\nimport { locales, TLocale } from './i18n';\nimport './App.css';\nimport theme from './theme';\nimport { snackbarMessageVar } from './cache';\n\nconst routes = {\n  HomePage: process.env.REACT_APP_ROUTE_HOME,\n  AllCustomersPage: process.env.REACT_APP_ROUTE_ALL_CUSTOMERS,\n  CreateCustomerPage: process.env.REACT_APP_ROUTE_CREATE_CUSTOMER,\n};\n\nconst App: React.FC = () => {\n  const snackbarMessage = useReactiveVar(snackbarMessageVar);\n  const currentLocale: TLocale = 'cs';\n\n  return (\n    <HashRouter>\n      <IntlProvider locale={currentLocale} messages={locales[currentLocale]} defaultLocale=\"cs\">\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <Header />\n          <Switch>\n            <Route exact path={routes.HomePage} component={HomePage} />\n            <Route exact path={routes.AllCustomersPage} component={AllCustomersPage} />\n            <Route exact path={routes.CreateCustomerPage} component={CreateCustomerPage} />\n            <Route exact path={`${routes.AllCustomersPage}/:id`} component={CustomerDetailPage} />\n            <Route path=\"*\" component={NotFoundPage} />\n          </Switch>\n          {snackbarMessage.error && (\n            <CustomSnackBar\n              message={snackbarMessage}\n              severityIndex={0}\n              locationName={snackbarMessage.locationName}\n            />\n          )}\n          {snackbarMessage.success && (\n            <CustomSnackBar\n              message={snackbarMessage}\n              severityIndex={1}\n              locationName={snackbarMessage.locationName}\n            />\n          )}\n        </ThemeProvider>\n      </IntlProvider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloClient, ApolloProvider } from '@apollo/client';\nimport { cache } from './app/cache';\nimport './index.css';\nimport App from './app/App';\n// import reportWebVitals from './reportWebVitals';\n\nconst client = new ApolloClient({\n  cache,\n});\n\nconst target = document.getElementById('erw-root');\nif (target) {\n  ReactDOM.render(\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>,\n    target\n  );\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}